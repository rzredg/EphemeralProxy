user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # multi_accept on;
}

http {
    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;
    # server_tokens off;
    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##
    gzip on;
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Virtual Host Configs
    ##
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    server {
        listen 80;
        server_name _;

        # authentication endpoint (commented out for now)
        #location /auth {
        #    internal;
        #    proxy_pass http://localhost:8888/validate_token;
        #    proxy_pass_request_body off;
        #    proxy_set_header Content-Length "";
        #    proxy_set_header X-Original-URI $request_uri;
        #    proxy_set_header X-Original-Remote-Addr $remote_addr;
        #}

        location / {
            root /var/www/proxy-interface;
            index index.html;
        }

        # Improved proxy handling
        location /proxy/ {
            #auth_request /auth;
            #auth_request_set $auth_status $upstream_status;
            
            # Use variables to extract and handle the target URL
            set $target_host '';
            set $target_uri '';
            
            # Extract both host and URI parts
            if ($request_uri ~ ^/proxy/https?://([^/]+)(/.*)$) {
                set $target_host $1;
                set $target_uri $2;
            }
            
            # If only domain is provided without path
            if ($request_uri ~ ^/proxy/https?://([^/]+)$) {
                set $target_host $1;
                set $target_uri /;
            }
            
            # Forward the request to the target host
            proxy_pass http://$target_host$target_uri;
            proxy_set_header Host $target_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Handle redirects to keep them within the proxy
            proxy_redirect ~^(https?://[^/]+)(.*)$ /proxy/$1$2;
        }
    }
}
